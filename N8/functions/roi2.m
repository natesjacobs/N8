function roi2(data)
%Finds multiple rois in single image (ie, cells) and saves in
%NOTES.CurrentROI
%ROI uses same format as bwlabel (0=backgound, 1=object1, etc.)

%% Initialize variables
global ROI

%data
data=double(data);
%normalize
data=data-min(data(:));
data=data./max(data(:));
%parameters
thr=nanmean(data(:))+nanstd(data(:));
thr=round(thr*10)/10;
v(1)=thr; %threshold
v(2)=50;  %spixel area lower threshold
v(3)=1e3; %spixel area upper threshold
v(4)=50;  %major axis length
v(5)=0.9;  %eccentricity
%roi
ROI=data>thr;
%im height (to correct for weird image indices in matlab)
imy=size(data,1); %dim1=Yaxis
%to break loop when adding rois
inloop=false;

%% Figure
%window
f1=figure('Units','normalized',...
    'Outerposition',[0 0.04 1 0.94],...
    'Color',[0.1 0.1 0.1],...
    'ToolBar','none');
%axes
ha = tight_subplot(1,1,0,0.01,0);

%% GUI to save/close
uicontrol(gcf,'Style','pushbutton',...
    'String','Save',...
    'FontSize',14,...
    'Units','normalized',...
    'Position',[0.95 0.94 0.04 0.05],...
    'BackgroundColor',[0.82 0.82 0.82],...
    'Callback',@saveclose);

%% GUIs for thresholding (Step 1)
%Lock threshold parameters
b1 = uicontrol(gcf,'Style','togglebutton',...
    'String','Lock',...
    'FontSize',12,...
    'FontWeight','bold',...
    'Units','normalized',...
    'Position',[0.01 0.941 0.05 0.049],...
    'BackgroundColor',[0.82 0.82 0.82],...
    'Callback',@(obj,evt)lock(obj,evt));
%Theshold
b2(1) = uicontrol(gcf,'Style','edit',...
    'String',v(1),...
    'FontSize',14,...
    'Units','normalized',...
    'Value',1,...
    'Position',[0.01 0.89 0.05 0.05],...
    'BackgroundColor',[0.82 0.82 0.82],...
    'Callback',@(obj,evt)updateroi(obj,evt));
an(1) = uicontrol(gcf,'Style','text',...
    'string','Threshold',...
    'FontSize',14,...
    'HorizontalAlignment','left',...
    'BackgroundColor',[0.1 0.1 0.1],...
    'ForegroundColor',[0.5 0.5 0.5],...
    'Units','normalized',...
    'Position',[0.062 0.89 0.05 0.036]);
%Min ROI size
b2(2) = uicontrol(gcf,'Style','edit',...
    'String',v(2),...
    'FontSize',14,...
    'Units','normalized',...
    'Value',1,...
    'Position',[0.01 0.84 0.05 0.05],...
    'BackgroundColor',[0.82 0.82 0.82],...
    'Callback',@(obj,evt)updateroi(obj,evt));
an(2) = uicontrol(gcf,'Style','text',...
    'string','Min size',...
    'FontSize',14,...
    'HorizontalAlignment','left',...
    'BackgroundColor',[0.1 0.1 0.1],...
    'ForegroundColor',[0.5 0.5 0.5],...
    'Units','normalized',...
    'Position',[0.062 0.84 0.05 0.036]);
%Max ROI size
b2(3) = uicontrol(gcf,'Style','edit',...
    'String',v(3),...
    'FontSize',14,...
    'Units','normalized',...
    'Value',1,...
    'Position',[0.01 0.79 0.05 0.05],...
    'BackgroundColor',[0.82 0.82 0.82],...
    'Callback',@(obj,evt)updateroi(obj,evt));
an(3) = uicontrol(gcf,'Style','text',...
    'string','Max size',...
    'FontSize',14,...
    'HorizontalAlignment','left',...
    'BackgroundColor',[0.1 0.1 0.1],...
    'ForegroundColor',[0.5 0.5 0.5],...
    'Units','normalized',...
    'Position',[0.062 0.79 0.05 0.036]);
%Major Axis length
b2(4) = uicontrol(gcf,'Style','edit',...
    'String',v(4),...
    'FontSize',14,...
    'Units','normalized',...
    'Value',1,...
    'Position',[0.01 0.74 0.05 0.05],...
    'BackgroundColor',[0.82 0.82 0.82],...
    'Callback',@(obj,evt)updateroi(obj,evt));
an(4) = uicontrol(gcf,'Style','text',...
    'string','Major axis',...
    'FontSize',14,...
    'HorizontalAlignment','left',...
    'BackgroundColor',[0.1 0.1 0.1],...
    'ForegroundColor',[0.5 0.5 0.5],...
    'Units','normalized',...
    'Position',[0.062 0.74 0.05 0.036]);
%Eccentricity
b2(5) = uicontrol(gcf,'Style','edit',...
    'String',v(5),...
    'FontSize',14,...
    'Units','normalized',...
    'Value',1,...
    'Position',[0.01 0.69 0.05 0.05],...
    'BackgroundColor',[0.82 0.82 0.82],...
    'Callback',@(obj,evt)updateroi(obj,evt));
an(5) = uicontrol(gcf,'Style','text',...
    'string','Eccentricity',...
    'FontSize',14,...
    'BackgroundColor',[0.1 0.1 0.1],...
    'ForegroundColor',[0.5 0.5 0.5],...
    'HorizontalAlignment','left',...
    'Units','normalized',...
    'Position',[0.062 0.69 0.06 0.036]);

%% GUIs for user adjustments (step 2)
%Add/remove ROI
b3 = uicontrol(gcf,'Style','togglebutton',...
    'String','+',...
    'FontSize',26,...
    'Units','normalized',...
    'Position',[0.07 0.94 0.04 0.05],...
    'BackgroundColor',[0.82 0.82 0.82],...
    'Visible','off',...
    'Callback',@(obj,evt)targetroi(obj,evt));
% %Split ROI
% b4 = uicontrol(gcf,'Style','togglebutton',...
%     'String','OO',...
%     'FontSize',14,...
%     'FontWeight','bold',...
%     'Units','normalized',...
%     'Position',[0.07 0.89 0.04 0.05],...
%     'BackgroundColor',[0.82 0.82 0.82],...
%     'Visible','off',...
%     'Callback',@(obj,evt)splitroi(obj,evt));


%% Initialize ROI & Plot data
updateroi; %plot function nested inside
    
%% Functions
    function checkvals
        %get gui values
        for i=1:length(b2)
            v(i)=str2double(get(b2(i),'string'));
        end
    end
    function plotdata
        %check button values
        checkvals;
        %threshold data
        pdata=data;
        pdata(pdata>v(1))=NaN;
        pdata(ROI)=v(1)*2;
        %plot data
        contourf(flipud(pdata),20);
        %adjust axes
        caxis([0 v(1)*2]);
        axis image off;
        clc;
    end
    function updateroi(src,evt)
        %check gui values
        checkvals;
        %reset roi
        ROI=data>v(1);
        %remove small blobs
        ROI = bwareaopen(ROI,v(2));
        %remove large blobs
        ROI = bwareaopen2(ROI,'Area',v(3));
        %remove long blobs
        ROI = bwareaopen2(ROI,'MajorAxisLength',v(4));
        %remove long blobs
        ROI = bwareaopen2(ROI,'Eccentricity',v(5));
        %replot data
        plotdata;
    end
    function lock(src,evt)
        %get state
        l=get(b1,'value');
        if l==1 %go to step2 (user adjustments)
            %lock gui for thresholding
            set(b2(:),'enable','off');
            set(an(:),'visible','off');
            %show extra buttons
            set(b3,'visible','on');
            %set(b4,'visible','on');
        else   %go back to step 1 (automatic thresholding parameters)
            %unlock gui for thresholding
            set(b2(:),'enable','on');
            set(an(:),'visible','on');
            %hide extra buttons
            set(b3,'visible','off');
            %set(b4,'visible','off');
        end
    end
    function targetroi(src,evt)
        addroiyes=true;
        if ~inloop
            while addroiyes
                inloop=true;
                %get cursor position/button press
                [ix(2),ix(1)] = ginput(1);
                %stop if clicked on button
                %in or out of roi?
                ix=round(ix);
                ix(1)=imy-ix(1)+1;
                try
                    inroi=ROI(ix(1),ix(2));
                catch
                    break;
                end
                %add/remove region
                if inroi
                    %get object #
                    roi=bwlabel(ROI);
                    nobj=roi(ix(1),ix(2));
                    %delete object
                    roi(roi==nobj)=0;
                    %return ROI or binary
                    ROI=roi>0;
                else
                    %if above threshold, just add object
                    if data(ix(1),ix(2))>v(1)
                        roi=data>v(1);
                        roi=bwlabel(roi);
                        nobj=roi(ix(1),ix(2));
                        roi=roi==nobj;
                        ROI(roi)=true;
                    else
                        %otherwise, use:
                        roi=addroi(data,ix);
                        %add object to ROI
                        ROI(roi)=true;
                    end
                end
                %replot
                plotdata;
            end
        end
        %reset toggle button
        set(b3,'value',0);
        pause(0.5);
        inloop=false;
    end
    function splitroi
        %use watershed to split object
        
        %...
        
    end
    function saveclose(src,evt)
        clc;
        close(f1);
        disp('ROI saved as global variable');
    end
end